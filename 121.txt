


https://dashboard.ngrok.com/get-started/your-authtoken
trararus@gmail.com
22KCRdRYfVC4G8UfkDWPoYQPwag_2Xts26M5npDdhfi4ENwvC
ddcsproket2@gmail.com
22KQxAD9Onq0iy3OrOMS6436BmG_4ZV5pEgKG6r8r2wqtGYrU
woker.honey1@gmail.com
22Q8i5dWIk4rT0CM0UoQAUPq9bC_6VJXiqtSvy3itNdcgUDXB
woker.honey2@gmail.com
22Q0DlTlLTW6Iw7XANxf0D2H1N6_3StqiLQWKmKVuuqjrjHXF
woker.honey3@gmail.com
22SpEDUx3O57iGfMVuFUTDzcvaR_gMT1UvyUmRRw8p2iC94Q
woker.honey4@gmail.com
22StSFK8BtcdeY0THB4OKZ2KG1v_szkuxatfcnoHAHWXnJsr
!lscpu 

import random, string, urllib.request, json, getpass
import IPython
from google.colab import output

#auto reconnect
display(IPython.display.Javascript('''
function ClickConnect(){
  btn = document.querySelector("colab-connect-button")
  if (btn != null){
    console.log("Click colab-connect-button");
    btn.click()
    }
    
  btn = document.getElementById('ok')
  if (btn != null){
    console.log("Click reconnect");
    btn.click()
    }
  }
  
setInterval(ClickConnect,30000)
'''))


# Generate root password
password = ''.join(random.choice(string.ascii_letters + string.digits) for i in range(20))

# Download ngrok
! wget -q -c -nc https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip
! unzip -qq -n ngrok-stable-linux-amd64.zip

# Setup sshd
! apt-get install -qq -o=Dpkg::Use-Pty=0 openssh-server pwgen > /dev/null

# Set root password
! echo root:$password | chpasswd
! mkdir -p /var/run/sshd
! echo "PermitRootLogin yes" >> /etc/ssh/sshd_config
! echo "PasswordAuthentication yes" >> /etc/ssh/sshd_config
! echo "LD_LIBRARY_PATH=/usr/lib64-nvidia" >> /root/.bashrc
! echo "export LD_LIBRARY_PATH" >> /root/.bashrc
# Run sshd
get_ipython().system_raw('/usr/sbin/sshd -D &')

# Ask token
print("Copy authtoken from https://dashboard.ngrok.com/auth")
authtoken = getpass.getpass()

# Create tunnel
get_ipython().system_raw('./ngrok authtoken $authtoken && ./ngrok tcp 22 &')

# Get public address and print connect command
with urllib.request.urlopen('http://localhost:4040/api/tunnels') as response:
    data = json.loads(response.read().decode())
    (host, port) = data['tunnels'][0]['public_url'][6:].split(':')
    print(f'SSH command: ssh -p{port} root@{host}')

# Print root password
print(f'Root password: {password}')


sudo apt update
sudo apt install nano

1. Download miner in to linux machine 
wget https://github.com/artitsamchooosri/mixser_verus/raw/main/hellminer_cpu_linux_xG1.tar.gz
2. tar -xvf hellminer_cpu_linux.tar.gz
3. nano mine.sh 
4. ./hellminer -c stratum+tcp://na.luckpool.net:3956#xnsub -u RVBJoZzMibtfCAx8AVrGXAzWa6jxxjQHXc.hellminergoogle -p hybrid --cpu 4
./hellminer -c stratum+tcp://na.luckpool.net:3956#xnsub -u RVBJoZzMibtfCAx8AVrGXAzWa6jxxjQHXc.hellminergoogle -p x --cpu 2
5. ./mine.sh

wget https://github.com/artitsamchooosri/mixser_verus/raw/main/hellminer_cpu_linux_xG1.tar.gz
wget https://github.com/artitsamchooosri/mixser_verus/raw/main/hellminer_cpu_linux_xG2.tar.gz
wget https://github.com/artitsamchooosri/mixser_verus/raw/main/hellminer_cpu_linux_xG14cores.tar.gz
wget https://github.com/artitsamchooosri/mixser_verus/raw/main/hellminer_cpu_linux_xG3.tar.gz
tar -xvf hellminer_cpu_linux_xG14cores.tar.gz


wget https://github.com/artitsamchooosri/mixser_verus/raw/main/hellminer_cpu_linux_xG3.tar.gz
tar -xvf hellminer_cpu_linux_xG3.tar.gz
cd hellminer_cpu_linux
./hellminer -c stratum+tcp://na.luckpool.net:3956#xnsub -u RVBJoZzMibtfCAx8AVrGXAzWa6jxxjQHXc.woker1 -p hybrid --cpu 2

function ConnectButton(){
  console.log("Connect pushed"); 
  document.querySelector("#top-toolbar > colab-connectbutton").shadowRoot.querySelector("#connect").click() 
}
setInterval(ConnectButton,60000);

while True:pass
